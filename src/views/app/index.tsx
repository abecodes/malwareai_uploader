import * as React from "react";
import { useEffect, useContext } from "react";
import { BrowserRouter as Router, Route, Switch } from "react-router-dom";

import Nav from "../../components/navbar";
import Dashboard from "../dashboard";
import Files from "../files";
import Settings from "../settings";
import Stats from "../stats";
import Modal from "../../components/modal";

import { Scheduler } from "../../services/scheduler";
import { StoreContext } from "../../store";
import _resetLimit from "./_resetLimit";

import "rsuite/dist/styles/rsuite-dark.min.css";
import "./app.css";
import _getResults from "./_getResults";

export default () => {
	const {
		apiKey: [apiKey],
		requests: [requests, setRequests],
		reset: [reset, setReset],
		files: [files, setFiles],
	} = useContext(StoreContext);

	useEffect(() => {
		if (apiKey) {
			Scheduler.getInstance().remove("limitReset");
			Scheduler.getInstance().remove("getResults");
			Scheduler.getInstance().add("limitReset", 60000, () =>
				_resetLimit(apiKey, setRequests, setReset)
			);
			Scheduler.getInstance().add("getResults", 60000, () =>
				_getResults(apiKey, setFiles)
			);
		}
	}, [apiKey]);

	useEffect(() => {
		return () => {
			Scheduler.getInstance().remove("limitReset");
			Scheduler.getInstance().remove("getResults");
		};
	}, []);

	return (
		<>
			<Router>
				<Nav
					items={[
						{
							key: 1,
							label: "Dashboard",
							icon: "home",
							position: "left",
							path: "/dist/index.html",
						},
						{
							key: 2,
							label: "Files",
							icon: "th-list",
							position: "left",
							path: "/files",
						},
						{
							key: 3,
							label: "Stats",
							icon: "dashboard",
							position: "right",
							path: "/stats",
						},
						{
							key: 4,
							label: "Settings",
							icon: "cog",
							position: "right",
							path: "/settings",
						},
					]}
				/>
				<Switch>
					<Route exact path="/dist/index.html" component={Dashboard} />
					<Route path="/files" component={Files} />
					<Route path="/stats" component={Stats} />
					<Route path="/settings" component={Settings} />
				</Switch>
			</Router>
			<StoreContext.Consumer>
				{({ modalContent: [modalContent] }) => (
					<Modal title={modalContent.title} content={modalContent.content} />
				)}
			</StoreContext.Consumer>
		</>
	);
};
