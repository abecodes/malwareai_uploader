import { Dispatch, SetStateAction } from "react";

import db from "../../layers/db";
import { ApiConnector } from "../../services/apiConnector";
import _getInfoFromHead from "../../utils/_getInfoFromHead";

const apiConnector = ApiConnector.getInstance();
let isQuerying = 0;

export default (
	apiKey: string,
	setFiles: Dispatch<SetStateAction<IFile[]>>
) => {
	if (isQuerying) return;

	db.getPendingFiles()
		.then((files) => {
			if (!files || !files.length) {
				throw new Error("No pending files");
			}

			isQuerying = files.length;

			return new Promise((resolve) => {
				apiConnector.result(
					apiKey,
					files.map((f) => f.id),
					(fileID, score) =>
						db
							.updateFileResult(fileID, score)
							.catch(console.error)
							.finally(() => {
								if (--isQuerying === 0) {
									resolve(null);
								}
							})
				);
			});
		})
		.then(() => db.getFiles())
		.then((files) => setFiles(files))
		.catch(console.error)
		.finally(() => (isQuerying = 0));
};
