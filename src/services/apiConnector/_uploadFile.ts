import db from "../../layers/db";
import * as FormData from "form-data/lib/form_data";
import { v4 } from "uuid";
import { createReadStream } from "fs";
import TR from "throttled-reader";
import _upload from "../../layers/api/_upload";
import _handleUpload from "./_handleUpload";
// import { createHash } from "crypto";

export default async function _readFile(
	file: string,
	size: number,
	apiKey: string,
	limit: number
) {
	try {
		const existing = await db.getFileByPath(file);
		if (existing && existing.id) {
			throw new Error("file was uploaded already");
		}

		const r = createReadStream(file);
		const throttledStream = new TR(r, {
			rate: limit * 1024, // In bytes per second
		});

		const form = new FormData();
		const id = v4();
		form.append("file", throttledStream, {
			filename: `${id}.pdf`,
			knownLength: size,
		});

		const res = await _upload(apiKey, form);

		return {
			id: res.id,
			path: file,
			result: -1,
			readyAt: Date.now() + Math.ceil(res.EstimatedAnalysisTime) * 1000,
		} as IFile;
	} catch (error) {
		throw error;
	}
}
